generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  name      String
  email     String  @unique
  password  String
  role      Role    @default(FREELANCER)
  jobs      Job[]   @relation("ClientJobs")
  applications Application[]
  createdAt DateTime @default(now())
}



model Job {
  id        String  @id @default(uuid())
  title     String
  description String
  budget    Float
  clientId  String
  client    User    @relation(fields: [clientId], references: [id], name: "ClientJobs")
  applications Application[]
  deleted   Boolean  @default(false) // âœ… Soft delete flag
  createdAt DateTime @default(now())


  // ðŸ”¹ New Fields for Sorting & Filtering
  category     String?  // e.g., "Software", "Marketing"
  location     String?  // e.g., "Remote", "New York"
  type         String?  // e.g., "Full-time", "Part-time"
  experience   String?  // e.g., "Junior", "Mid", "Senior"
  skills      String[]  // Array of required skills
  status       String   @default("open") // "open", "closed"
}



model Application {
  id        String  @id @default(uuid())
  jobId     String
  job       Job     @relation(fields: [jobId], references: [id])
  freelancerId String
  freelancer User    @relation(fields: [freelancerId], references: [id])
  createdAt DateTime @default(now())
}

enum Role {
  CLIENT
  FREELANCER
}
